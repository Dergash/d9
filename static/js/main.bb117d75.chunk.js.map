{"version":3,"sources":["components/ColorTable/ColorTable.module.css","assets/COLGRAD.BAM","components/PaperdollView/PaperdollBam.module.css","components/Card/Card.module.css","components/AppBar/AppBar.module.css","../ /^/.//.*$/ groupOptions: {} namespace object","adapters/bam-texture.ts","adapters/bam.ts","model/palette.ts","model/sprite.ts","components/PaperdollView/PaperdollBam.tsx","components/ColorTable/useColorTable.ts","utils/cn.ts","components/PaperdollView/PaperdollView.tsx","components/ColorTable/ColorTable.tsx","components/Card/Card.tsx","components/AppBar/AppBar.tsx","App.tsx","serviceWorker.ts","index.tsx","components/PaperdollView/PaperdollView.module.css","assets/MPALETTE.bmp"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","BAMTexture","name","header","palette","frames","this","forEach","frame","compressed","data","compressionByte","compressedData","DataView","decompressedData","i","byteLength","getUint8","numberOfRepeats","processedRepeats","push","Uint8Array","decompressRLE","compressedColorIndex","applyPaddedDimensions","dimensions","reduce","prev","next","paddedWidth","prevPaddedWidth","paddedHeight","prevPaddedHeight","nextPaddedWidth","width","height","spriteSize","index","putFrameInSprite","spriteData","spriteDimensions","frameIndex","getFrameRange","frameStart","start","frameEnd","end","getFramePadding","horizontal","imageRange","vertical","putImageInSprite","range","padding","frameBytesCounter","paddingBytesCounter","srcPixelIndex","centerX","Math","abs","centerY","offsets","BAMAdapter","signature","parseHeader","parseFrames","parsePalette","paletteOffset","frameLookupTableOffset","view","offset","parsedSignature","TextDecoder","decode","frameEntriesCount","getUint16","cyclesCount","frameEntriesOffset","getUint32","red","green","blue","frameHeader","frameEntries","frameOffset","frameEntry","getInt16","Boolean","rgbaOffset","metal","minor","major","skin","leather","armor","hair","Palette","colors","newPalette","color","length","gradient","reverse","Sprite","PaletteHelper","transparencyIndex","getTransparencyIndex","setColors","pixels","canvas","document","createElement","context","getContext","imgData","createImageData","putImageData","toDataURL","React","memo","props","useState","sprite","setSprite","p","useMemo","parse","useEffect","paperdollName","bin","bam","default","decompressFrames","combineFrames","catch","console","error","base64","getAsBase64","src","alt","undefined","className","styles","placeholder","dictionary","cn","PaperdollRace","PaperdollGender","PaperdollRole","PaperdollArmor","result","classNames","item","key","join","type","colorsSrc","icon","parsedPalette","handleClick","useCallback","event","Number","parseInt","currentTarget","dataset","onClick","list","data-index","selected","selectedIndex","img","Card","container","title","children","PaperdollView","setSkin","setHair","setMajor","setMinor","setArmor","setLeather","setMetal","gender","Male","race","Human","role","Priest","Heavy","paperdollDescriptor","setPaperdollDescriptor","getPaperdollName","onChange","target","value","select","Female","Warrior","Rogue","MagicUser","None","Light","Medium","colorsContainer","AppBar","to","link","App","path","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"4EACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,SAAW,6BAA6B,IAAM,0B,mBCDhID,EAAOC,QAAU,EAAQ,GAAR,CAAwE,qpE,mBCCzFD,EAAOC,QAAU,CAAC,YAAc,oC,mBCAhCD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,sB,mBCA9DD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,uB,iGCD/D,IAAIC,EAAM,CACT,iBAAkB,CACjB,GACA,GAED,iBAAkB,CACjB,GACA,GAED,iBAAkB,CACjB,GACA,GAED,iBAAkB,CACjB,GACA,GAED,iBAAkB,CACjB,GACA,GAED,iBAAkB,CACjB,GACA,GAED,iBAAkB,CACjB,GACA,GAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,C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","file":"static/js/main.bb117d75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ColorTable_list__1WdaK\",\"item\":\"ColorTable_item__3OIZf\",\"selected\":\"ColorTable_selected__19Sw4\",\"img\":\"ColorTable_img__1uQOX\"};","module.exports = require(\"../../node_modules/arraybuffer-loader/lib/to-array-buffer.js\")(\"QkFNIFYxICABAAEAGAAAACgAAAAoBAAAGAAYAPf/9/8qBACAAQAAAAD/AAAAAAAAAID/AACA/wD/4ogA/N2FAPfUfwDwyXcA5rlsANqkXgDLi0wAum44AKZQJQCKORoAbB8OAEgBAAD///YA///RAP//sQD//3EA//8RAPDwAADR0QAAsLAAAJCQAABwcAAAUFAAAEBAAAD/9v8A/9H/AP+x/wD/cf8A/xH/APAA8ADRANEAsACwAJAAkABwAHAAUABQAEAAQAD2//8A0f//ALH//wCR//8AEf//AADw8AAA0dEAALCwAACQkAAAcHAAAFBQAABAQAD29v8A0dH/AJGR/wBxcf8AMTH/AAAA8AAAANEAAACwAAAAkAAAAHAAAABQAAAAQAD/9vYA/9HRAP+xsQD/cXEA/xERAPAAAADRAAAAsAAAAJAAAABwAAAAUAAAAEAAAAD2//YA0f/RALH/sQBx/3EAEf8RAADwAAAA0QAAALAAAACQAAAAcAAAAFAAAABAAAD76ZgA9+R0APLcPgDlyi8Azq4mALWPHACbcBIAfVQNAPvCvwD3nbsA8mW1AOVSpwDORY4AtTd0AJsoWgB9HEUA1Om/AMDkuwB73LUAbcqnAGWujgBdj3QAU3BaAEVURQDEsr8AsJ27AIt1tQBtUqcAZUWOAF03dABTKFoARRxFAPvCmAD3nXQA8mU+AOVSLwDORSYAtTccAJsoEgB9HA0A1OmYALDkdAB73D4AbcovAGWuJgBdjxwAU3ASAEVUDQD/2NcA/7i3AP+IhwDweHcA0WhoALBYVwCQSEcAcDg3ANj/1wDI/7cAiP+HAHjwdwBo0WgAWLBXAEiQRwA4cDcAyMjXALi4twCYmIcAeHh3AGhoaABYWFcASEhHADg4NwD/2LEA/7hxAP+IEQDweAAA0WgAALBYAACQSAAAcDgAANj/sQC4/3EAiP8RAHjwAABo0QAAWLAAAEiQAAA4cAAA2Nf/AMi3/wCIh/8AeHfwAGho0QBYV7AASEeQADg3cADIof8AuHH/AJgg/wB4APAAaADRAFgAsABIAJAAOABwAP+x2AD/cbgA/xGIAPAAeADRAGgAsABYAJAASABwADgA2NfYALi3uACIh4gAeHd4AGhoaABYV1gASEdIADg3OAChyP8Agbj/ACCY/wAAePAAAGjRAABYsAAASJAAADhwANfY2ADHuLgAh4iIAHd4eABoaGgAV1hYAEdISAA3ODgAsf/YAIH/uAAR/4gAAPB4AADRaAAAsFgAAJBIAABwOADHoNgAt3G4AJchiAB3AHgAaABoAFcAWABHAEgANwA4AKDH2ABxt7gAIZeIAAB3eAAAaGgAAFdYAABHSAAANzgA2NexALi3cQCIhxEAeHcAAGhoAABYVwAASEcAADg3AAAAAA8ODg0NDAwMDAsLCwsLCwwMDAwNDQ4ODw4ODQ0MDAsLCwsLCgoLCwsLCwwMDQ0ODg4NDQwMCwsLCgoKCgoKCgoLCwsMDA0NDg0NDAwLCwoKCgkJCQkJCQoKCgsLDAwNDQ0MDAsLCgoJCQkJCAgJCQkJCgoLCwwMDQ0MCwsKCgkJCAgICAgICAgJCQoKCwsMDQwMCwoKCQkICAcHBwcHBwgICQkKCgsMDAwLCwoJCQgIBwcHBgYHBwcICAkJCgsLDAwLCgoJCQgHBwYGBgYGBgcHCAkJCgoLDAwLCgoJCAgHBgYFBQUFBgYHCAgJCgoLDAwLCgkJCAcHBgYFBAQFBgYHBwgJCQoLDAsLCgkJCAcHBgUFBAQFBQYHBwgJCQoLCwsLCgkJCAcHBgUFBAQFBQYHBwgJCQoLCwwLCgkJCAcHBgYFBAQFBgYHBwgJCQoLDAwLCgoJCAgHBgYFBQUFBgYHCAgJCgoLDAwLCgoJCQgHBwYGBgYGBgcHCAkJCgoLDAwLCwoJCQgIBwcHBgYHBwcICAkJCgsLDAwMCwoKCQkICAcHBwcHBwgICQkKCgsMDA0MCwsKCgkJCAgICAgICAgJCQoKCwsMDQ0MDAsLCgoJCQkJCAgJCQkJCgoLCwwMDQ0NDAwLCwoKCgkJCQkJCQoKCgsLDAwNDQ4NDQwMCwsLCgoKCgoKCgoLCwsMDA0NDg4ODQ0MDAsLCwsLCgoLCwsLCwwMDQ0ODg8ODg0NDAwMDAsLCwsLCwwMDAwNDQ4ODw==\")","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeholder\":\"PaperdollBam_placeholder__1YqD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3BCzV\",\"title\":\"Card_title__2pVhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AppBar_container__3uZgi\",\"link\":\"AppBar_link__WUTSw\"};","var map = {\n\t\"./CEFF1INV.BAM\": [\n\t\t48,\n\t\t3\n\t],\n\t\"./CHFC1INV.BAM\": [\n\t\t49,\n\t\t4\n\t],\n\t\"./CHFC2INV.BAM\": [\n\t\t50,\n\t\t5\n\t],\n\t\"./CHFC3INV.BAM\": [\n\t\t51,\n\t\t6\n\t],\n\t\"./CHFC4INV.BAM\": [\n\t\t52,\n\t\t7\n\t],\n\t\"./CHFF1INV.BAM\": [\n\t\t53,\n\t\t8\n\t],\n\t\"./CHFF2INV.BAM\": [\n\t\t54,\n\t\t9\n\t],\n\t\"./CHFF3INV.BAM\": [\n\t\t55,\n\t\t10\n\t],\n\t\"./CHFF4INV.BAM\": [\n\t\t56,\n\t\t11\n\t],\n\t\"./CHFT1INV.BAM\": [\n\t\t57,\n\t\t12\n\t],\n\t\"./CHFT2INV.BAM\": [\n\t\t58,\n\t\t13\n\t],\n\t\"./CHFW1INV.BAM\": [\n\t\t59,\n\t\t14\n\t],\n\t\"./CHFW2INV.BAM\": [\n\t\t60,\n\t\t15\n\t],\n\t\"./CHFW3INV.BAM\": [\n\t\t61,\n\t\t16\n\t],\n\t\"./CHFW4INV.BAM\": [\n\t\t62,\n\t\t17\n\t],\n\t\"./CHMC1INV.BAM\": [\n\t\t63,\n\t\t18\n\t],\n\t\"./CHMC2INV.BAM\": [\n\t\t64,\n\t\t19\n\t],\n\t\"./CHMC3INV.BAM\": [\n\t\t65,\n\t\t20\n\t],\n\t\"./CHMC4INV.BAM\": [\n\t\t66,\n\t\t21\n\t],\n\t\"./CHMF1INV.BAM\": [\n\t\t67,\n\t\t22\n\t],\n\t\"./CHMF2INV.BAM\": [\n\t\t68,\n\t\t23\n\t],\n\t\"./CHMF3INV.BAM\": [\n\t\t69,\n\t\t24\n\t],\n\t\"./CHMF4INV.BAM\": [\n\t\t70,\n\t\t25\n\t],\n\t\"./CHMT1INV.BAM\": [\n\t\t71,\n\t\t26\n\t],\n\t\"./CHMT2INV.BAM\": [\n\t\t72,\n\t\t27\n\t],\n\t\"./CHMW1INV.BAM\": [\n\t\t73,\n\t\t28\n\t],\n\t\"./CHMW2INV.BAM\": [\n\t\t74,\n\t\t29\n\t],\n\t\"./CHMW3INV.BAM\": [\n\t\t75,\n\t\t30\n\t],\n\t\"./CHMW4INV.BAM\": [\n\t\t76,\n\t\t31\n\t],\n\t\"./CIFC1INV.BAM\": [\n\t\t77,\n\t\t32\n\t],\n\t\"./CIFC2INV.BAM\": [\n\t\t78,\n\t\t33\n\t],\n\t\"./CIFC3INV.BAM\": [\n\t\t79,\n\t\t34\n\t],\n\t\"./CIFC4INV.BAM\": [\n\t\t80,\n\t\t35\n\t],\n\t\"./CIFF1INV.BAM\": [\n\t\t81,\n\t\t36\n\t],\n\t\"./CIFF2INV.BAM\": [\n\t\t82,\n\t\t37\n\t],\n\t\"./CIFF3INV.BAM\": [\n\t\t83,\n\t\t38\n\t],\n\t\"./CIFF4INV.BAM\": [\n\t\t84,\n\t\t39\n\t],\n\t\"./CIFT1INV.BAM\": [\n\t\t85,\n\t\t40\n\t],\n\t\"./CIFT2INV.BAM\": [\n\t\t86,\n\t\t41\n\t],\n\t\"./CIMC1INV.BAM\": [\n\t\t87,\n\t\t42\n\t],\n\t\"./CIMC2INV.BAM\": [\n\t\t88,\n\t\t43\n\t],\n\t\"./CIMC3INV.BAM\": [\n\t\t89,\n\t\t44\n\t],\n\t\"./CIMC4INV.BAM\": [\n\t\t90,\n\t\t45\n\t],\n\t\"./CIMF1INV.BAM\": [\n\t\t91,\n\t\t46\n\t],\n\t\"./CIMF2INV.BAM\": [\n\t\t92,\n\t\t47\n\t],\n\t\"./CIMF3INV.BAM\": [\n\t\t93,\n\t\t48\n\t],\n\t\"./CIMF4INV.BAM\": [\n\t\t94,\n\t\t49\n\t],\n\t\"./CIMT1INV.BAM\": [\n\t\t95,\n\t\t50\n\t],\n\t\"./CIMT2INV.BAM\": [\n\t\t96,\n\t\t51\n\t],\n\t\"./COLGRAD.BAM\": [\n\t\t18\n\t],\n\t\"./MPALETTE.bmp\": [\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 42;\nmodule.exports = webpackAsyncContext;","import { ColorRGB } from '../model/color'\nimport { BamFrameEntry, BamFrameHeader } from '../model/bam-frame'\n\n\ntype Dimensions = {\n    width: number,\n    height: number\n}\n\ntype Range = { start: number, end: number }\n\ntype Padding = {\n    /**\n     * Sum of transparent area left and right of actual image\n     */\n    horizontal: number,\n    /**\n     * Transparent area on top of actual image (TODO: bottom probably requires cycles[])\n     */\n    vertical: number\n}\n\n/**\n * BAM texture object\n * @param {Function} decompressFrames\n * @param {Function} combineFrames\n */\nexport default class BAMTexture {\n\n    constructor(\n        public name: string,\n        public header: BamFrameHeader,\n        public palette: ColorRGB[],\n        public frames: BamFrameEntry[]\n    ) {}\n\n    /**\n     * Decompress frames\n     */\n    decompressFrames() {\n        this.frames.forEach(frame => {\n            if (frame.compressed && frame.data) {\n                frame.data = decompressRLE(frame.data, this.header.compressedColorIndex)\n                frame.compressed = false\n            }\n        })\n    }\n\n    /**\n     * Combine frames into one single frame which replace them.\n     *\n     * TODO: It seems that cycles[] was used to determine how frames attached to each other\n     * (along with their centerX/Y fields). Currently this method works only for vertical combinations.\n     */\n    combineFrames() {\n        this.applyPaddedDimensions();\n        const dimensions = this.frames.reduce((prev: BamFrameEntry, next: BamFrameEntry) => {\n            const { paddedWidth: prevPaddedWidth = 0, paddedHeight: prevPaddedHeight = 0 } = prev\n            const { paddedWidth: nextPaddedWidth = 0, paddedHeight: nextPaddedHeight = 0 } = next\n            return {\n                width: prevPaddedWidth < nextPaddedWidth ? nextPaddedWidth : prevPaddedWidth,\n                height: prevPaddedHeight + nextPaddedHeight,\n            }\n        })\n        const spriteSize = dimensions.width * dimensions.height;\n        const data = new Uint8Array(spriteSize);\n        this.frames.forEach((frame, index) => {\n            this.putFrameInSprite(data, dimensions, frame, index);\n        });\n        this.frames = [{\n            data,\n            width: dimensions.width,\n            height: dimensions.height,\n        }];\n    }\n\n    /**\n     * Extend frame with transparency paddings and place it in sprite data array. \n     *\n     * @param frame\n     * @param frameIndex\n     * @param spriteData\n     * @param spriteDimensions\n     */\n    putFrameInSprite(spriteData: Uint8Array, spriteDimensions: Dimensions, frame: BamFrameEntry, frameIndex: number) {\n        // Frame range\n        const { start: frameStart, end: frameEnd } = this.getFrameRange(frameIndex, spriteDimensions);\n        // Transparent paddings\n        const { horizontal, vertical } = this.getFramePadding(frame, spriteDimensions);\n        // Actual image range\n        const imageRange = { start: frameStart + vertical, end: frameEnd };\n        // Fill top padding with transparency\n        for (let i = frameStart; i < imageRange.start; i++) {\n            spriteData[i] = this.header.compressedColorIndex;\n        }\n        // Fill image data\n        this.putImageInSprite(spriteData, imageRange, frame, horizontal);\n    }\n\n    /**\n     * Extend frame with horizontal transparent padding and\n     * copy frame pixel data into specific range of output data array.\n     *\n     * Horizontal padding is required to concatenate two frames in one consistent sprite.\n     *\n     * Example: let T be transparency pixel and P be an actual frame data pixel,\n     * and frame data is [P, P, P, P, P, P] with image width of 3.\n     *\n     * Then, when we set padding of 2, we get\n     * [T, T, P, P, P, T, T, P, P, P]\n     */\n    putImageInSprite(data: Uint8Array, range: Range, frame: BamFrameEntry, padding: number) {\n        let frameBytesCounter = 0;\n        let paddingBytesCounter = padding;\n        let srcPixelIndex = 0;\n        for (let i = range.start; i < range.end; i++) {\n            if (paddingBytesCounter !== 0) { // Process transparent padding\n                data[i] = this.header.compressedColorIndex;\n                paddingBytesCounter--;\n            } else { // Process actual image pixels\n                if (data) {\n                    data[i] = frame.data ? new Uint8Array(frame.data)[srcPixelIndex] : 0\n                }\n                srcPixelIndex++;\n                frameBytesCounter++;\n            }\n            if (frameBytesCounter === frame.width) { // Go to the next padding\n                paddingBytesCounter = padding;\n                frameBytesCounter = 0;\n            }\n        }\n    }\n\n    /**\n     * Add paddedWidth/paddedHeight properties, calculated as (original width/height + transparent padding)\n     * for each frame.\n     *\n     * Frames concatenated with centerX, centerY coordinates.\n     * When centerX/centerY is negative, actual image is shifted right/bottom\n     */\n    applyPaddedDimensions() {\n        this.frames = this.frames.map(frame => ({\n            ...frame,\n            paddedWidth: ((frame.centerX ?? 0) < 0) ? Math.abs(frame.centerX ?? 0) + frame.width : frame.width,\n            paddedHeight: ((frame.centerY ?? 0) < 0) ? Math.abs(frame.centerY ?? 0) + frame.height : frame.height,\n        }));\n    }\n\n    /**\n     * Get start/end offsets for the frame in the output array\n     *\n     * @param frameIndex Frame index\n     * @param {Dimensions} spriteDimensions Resulting image dimenstions\n     * @returns {Range}\n     */\n    getFrameRange(frameIndex: number, spriteDimensions: Dimensions) {\n        let start = 0;\n        for (let i = 0; i < frameIndex; i++) {\n            const { paddedWidth = 0, paddedHeight = 0} = this.frames[i]\n                start += paddedWidth * paddedHeight\n        }\n        const end = start + spriteDimensions.width * (this.frames[frameIndex].paddedHeight ?? 0);\n        return { start, end };\n    }\n\n    /**\n     * Get transparent padding around actual image\n     */\n    getFramePadding(frame: BamFrameEntry, spriteDimensions: Dimensions): Padding {\n        return {\n            horizontal: spriteDimensions.width - frame.width,\n            vertical: spriteDimensions.width * ((frame.paddedHeight ?? 0) - frame.height),\n        };\n    }\n}\n\n/**\n * Decompress RLE-compressed data\n *\n * Each compressionByte will be repeated as specified by\n * the next byte value plus one, e.g. for compressionByte = 0x0A\n *\n * 0xAB 0x0A 0x02 0x0B  becomes 0xAB 0x0A 0x0A 0x0A 0x0B:\n *\n * All other bytes will not change.\n *\n * @param data Frame compressed data\n * @param compressionByte Byte used for compression\n * @returns {Uint8Array} Decompressed data\n */\nexport function decompressRLE(data: ArrayBuffer, compressionByte: number) {\n    const compressedData = new DataView(data);\n    const decompressedData = [];\n    for (let i = 0; i < compressedData.byteLength; i++) {\n        if (compressedData.getUint8(i) === compressionByte) {\n            const numberOfRepeats = compressedData.getUint8(i + 1) + 1;\n            for (let processedRepeats = 0; processedRepeats < numberOfRepeats; processedRepeats++) {\n                decompressedData.push(compressionByte);\n            }\n            i = i + 1;\n        } else {\n            decompressedData.push(compressedData.getUint8(i));\n        }\n    }\n    return new Uint8Array(decompressedData);\n}\n","import BAMTexture from './bam-texture';\nimport { BamFrameHeader, BamFrameEntry } from '../model/bam-frame';\nimport { ColorRGB } from '../model/color';\n\nexport { BAMTexture };\n\n/**\n * @typedef {Object} BAMTextureArgs\n * @property {string} name\n * @property {FrameHeader} header\n * @property {Color[]} palette\n * @property {FrameEntry[]} frames\n *\n * @typedef {Object} FrameEntry\n * @property {number} width\n * @property {number} height\n * @property {number} centerX\n * @property {number} centerY\n * @property {boolean} compressed Frame data is RLE compressed\n * @property {ArrayBuffer} data Pixels in RGBA\n *\n * @typedef {Object} FrameHeader\n * @property {number} frameEntriesCount\n * @property {number} cyclesCount\n * @property {number} compressedColorIndex\n * @property {number} frameEntriesOffset\n * @property {number} paletteOffset\n * @property {number} frameLookupTableOffset\n *\n * @typedef {Object} Color\n * @property {number} red\n * @property {number} green\n * @property {number} blue\n *\n */\n\n/**\n * @see http://gemrb.org/iesdp/file_formats/ie_formats/bam_v1.htm#bamv1_Header\n */\nconst offsets = {\n    signature: 0x0000,\n    version: 0x0004,\n    frameEntriesCount: 0x0008,\n    cyclesCount: 0x000a,\n    compressedColorIndex: 0x000b,\n    frameEntries: 0x000c,\n    palette: 0x0010,\n    frameLookupTable: 0x0014,\n};\n\n/**\n * @see http://gemrb.org/iesdp/file_formats/ie_formats/bam_v1.htm#bamv1_FrameEntry\n */\nconst frameHeaderSize = 12;\n\n/**\n * Adapter for BAM images\n *\n * @property {Function} parse\n * @property {Function} parseHeader\n * @property {Function} parsePalette\n * @property {Function} parseFrames\n */\nexport default class BAMAdapter {\n    /**\n     * Parse BAM image binary data\n     *\n     * @param data BAM image binary data\n     * @returns {BAMTexture}\n     */\n    \n    private signature: string = ''\n\n    parse(name: string, data: ArrayBuffer) {\n        const header = this.parseHeader(data);\n        const frames = this.parseFrames(data, header);\n        const palette = this.parsePalette(data, header.paletteOffset, header.frameLookupTableOffset);\n        const texture = new BAMTexture(name, header, palette, frames);\n        return texture;\n    }\n\n    /**\n     * Extract header data from BAM image\n     *\n     * @param data BAM image binary data\n     * @throws {Error} When magic word not matched\n     */\n    parseHeader(data: ArrayBuffer): BamFrameHeader {\n        const view = new DataView(data);\n        let signature = new Uint8Array(8);\n        for (let offset = 0x0000; offset < 0x0008; offset++) {\n            signature[offset] = view.getUint8(offset);\n        }\n        const parsedSignature = new TextDecoder('utf-8').decode(signature);\n        if (parsedSignature === 'BAM V1  ') {\n            this.signature = parsedSignature;\n            return {\n                frameEntriesCount: view.getUint16(offsets.frameEntriesCount, true),\n                cyclesCount: view.getUint8(offsets.cyclesCount),\n                compressedColorIndex: view.getUint8(offsets.compressedColorIndex),\n                frameEntriesOffset: view.getUint32(offsets.frameEntries, true),\n                paletteOffset: view.getUint32(offsets.palette, true),\n                frameLookupTableOffset: view.getUint32(offsets.frameLookupTable, true),\n            };\n        }\n        throw new Error(`Unknown format: ${parsedSignature}`);\n    }\n\n    /**\n     * Extract palette data from BAM image\n     *\n     * @param data BAM image binary data\n     * @param offset Where palette starts\n     * @param end Where palette ends\n     */\n    parsePalette(data: ArrayBuffer, offset: number, end: number): ColorRGB[] {\n        const view = new DataView(data);\n        const palette = [];\n        for (let i = offset; i < end - 4; i = i + 4) {\n            const red = view.getUint8(i);\n            const green = view.getUint8(i + 1);\n            const blue = view.getUint8(i + 2);\n            // const alpha = view.getUint8(i + 3); not used\n            palette.push({ red, green, blue });\n        }\n        return palette;\n    }\n\n    /**\n     * Extract frames entries and data from BAM binary buffer\n     *\n     * @param data BAM image binary data\n     * @param header\n     */\n    parseFrames(data: ArrayBuffer, frameHeader: BamFrameHeader): BamFrameEntry[] {\n        const { frameEntriesOffset, frameEntriesCount} = frameHeader\n        const view = new DataView(data);\n        const frameEntries = [];\n        for (let frameIndex = 0; frameIndex < frameEntriesCount; frameIndex++) {\n            const frameOffset = frameEntriesOffset + frameIndex * frameHeaderSize;\n            const frameEntry = {\n                width: view.getUint16(frameOffset + 0x0000, true),\n                height: view.getUint16(frameOffset + 0x0002, true),\n                centerX: view.getInt16(frameOffset + 0x0004, true),\n                centerY: view.getInt16(frameOffset + 0x0006, true),\n                compressed: Boolean(view.getUint8(frameOffset + 0x0008 + 3)),\n                data: null as unknown as ArrayBuffer\n            };\n            // bit 0-30 is actual offset\n            const rgbaOffset = (view.getUint32(frameOffset + frameHeaderSize - 4, true) << 1) >> 1;\n            frameEntry.data = data.slice(rgbaOffset);\n            // bit 31 is RLE compression flag\n            const compressed = view.getUint32(frameOffset + frameHeaderSize - 4, true) >> 31;\n            frameEntry.compressed = !compressed;\n            frameEntries.push(frameEntry);\n        }\n        return frameEntries;\n    }\n}\n","import { CharacterColor, ColorRGB } from \"./color\";\n\nconst offsets = {\n    metal: 0x04,\n    minor: 0x10,\n    major: 0x1c,\n    skin: 0x28,\n    leather: 0x34,\n    armor: 0x40,\n    hair: 0x4c,\n    // shades\n};\nexport default class Palette {\n    setColors(palette: ColorRGB[], colors: CharacterColor) {\n        const newPalette = [\n            ...palette,\n        ];\n        Object.keys(colors).forEach((color) => {\n            if (colors[color as keyof CharacterColor]) {\n                for (let i = 0; i < 12; i++) {\n                    // const pek = colors[color as keyof CharacterColor][i];\n                   //  const bek = newPalette[offsets[color as keyof CharacterColor] + i]\n                   newPalette[offsets[color as keyof CharacterColor] + i] = colors[color as keyof CharacterColor][i] as any;\n                }\n            }\n        });\n\n\n        return newPalette;\n    }\n\n    getTransparencyIndex(palette: ColorRGB[]) {\n        for (let i = 0; i < palette.length; i++) {\n            if (palette[i].red === 0 && palette[i].green === 255 && palette[i].blue === 0) {\n                return i;\n            }\n        }\n        return 0;\n    }\n\n    parse(data: ArrayBuffer) {\n        const view = new DataView(data);\n        const bmpRgbaOffset = view.getUint8(0x000a);\n        const palette = [];\n        let gradient = [];\n        // let shade = 0;\n        for (let i = bmpRgbaOffset; i < data.byteLength; i = i + 3) {\n            gradient.push({\n                blue: view.getUint8(i + 2),\n                green: view.getUint8(i + 1),\n                red: view.getUint8(i),\n            });\n            if (gradient.length === 12) {\n                palette.push(gradient);\n                gradient = [];\n            }\n        }\n        palette.reverse();\n        return palette;\n    }\n}\n","\nimport { BAMTexture } from '../adapters/bam';\nimport Palette from './palette';\nimport { CharacterColor } from './color';\n\nexport default class Sprite {\n\n    BAMTexture: BAMTexture\n    colors: CharacterColor = {\n        hair: null,\n        skin: null,\n        major: null,\n        minor: null,\n        armor: null,\n        leather: null,\n        metal: null\n    }\n\n    constructor(BAMTexture: BAMTexture) {\n        this.BAMTexture = BAMTexture;\n\n    }\n\n    getAsBase64() {\n        const PaletteHelper = new Palette();\n        let palette = [...this.BAMTexture.palette];\n        const { width, height, data } = this.BAMTexture.frames[0];\n        const transparencyIndex = PaletteHelper.getTransparencyIndex(palette);\n        palette = PaletteHelper.setColors(palette, this.colors);\n\n        const pixels = new Uint8Array(data as ArrayBuffer);\n\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const context = canvas.getContext('2d') as CanvasRenderingContext2D; // TODO : Create canvas every time is dumb\n        const imgData = context.createImageData(width, height);\n\n        for (let i = 0; i < pixels.length; i++) {\n            imgData.data[i * 4 + 0] = palette[pixels[i]].blue;\n            imgData.data[i * 4 + 1] = palette[pixels[i]].green;\n            imgData.data[i * 4 + 2] = palette[pixels[i]].red;\n            imgData.data[i * 4 + 3] = (pixels[i] === transparencyIndex) ? 0 : 255;\n        }\n\n        context.putImageData(imgData, 0, 0);\n        const result = canvas.toDataURL('image/png');\n        return result;\n    }\n}\n","import React from 'react'\nimport BAMAdapter from '../../adapters/bam';\nimport Sprite from '../../model/sprite';\nimport Palette from '../../model/palette';\nimport styles from './PaperdollBam.module.css'\n/* eslint import/no-webpack-loader-syntax: off */\nimport palette from '!arraybuffer-loader!../../assets/MPALETTE.bmp'\n\ninterface PekProps {\n    paperdollName: string,\n    skin: number,\n    hair: number,\n    major: number,\n    minor: number,\n    leather: number,\n    armor: number,\n    metal: number\n}\n\nexport const PaperdollBam: React.FC<PekProps> = (props) => {\n    const [sprite, setSprite] = React.useState<Sprite | undefined | null>()\n    const p = React.useMemo(() => {\n        const paletteParser = new Palette()\n        const parsedPalette = paletteParser.parse(palette)\n        return parsedPalette\n    }, [])\n    React.useEffect(() => {\n        import(`!arraybuffer-loader!../../assets/${props.paperdollName}`)\n        .then((bin) => {\n            const adapter = new BAMAdapter();\n            const bam = adapter.parse('COLGRAD', bin.default);\n            bam.decompressFrames();\n            if (bam.frames.length > 1) {\n                bam.combineFrames();\n            }\n            const gradient = new Sprite(bam);\n            setSprite(gradient)\n        })\n        .catch((e) => {\n            console.error(e)\n            setSprite(null)\n        })\n    }, [props.paperdollName])\n    \n    if (sprite) {\n        sprite.colors.skin = p[props.skin]\n        sprite.colors.hair = p[props.hair]\n        sprite.colors.major = p[props.major]\n        sprite.colors.minor = p[props.minor]\n        sprite.colors.leather = p[props.leather]\n        sprite.colors.armor = p[props.armor]\n        sprite.colors.metal = p[props.metal]\n        const base64 = sprite.getAsBase64();\n        return <div>\n            {sprite && <img src={base64} alt=\"Color icon\" />}\n        </div>\n    }\n    return <div>\n        {sprite === undefined && <div className={styles.placeholder}>Loading...</div>}\n        {sprite === null && <div className={styles.placeholder}>Not implemented</div>}\n    </div>\n}\n\nexport default React.memo(PaperdollBam)\n","import { AppearanceColorType } from '../../model/color'\n\nexport const dictionary = {\n    skin: [\n        0x53, 0x6B, 0x08, 0x72, 0x09, 0x0A,\n        0x55, 0x54, 0x0C, 0x10, 0x0F, 0x11,\n        0x6C, 0x6A, 0x71, 0x0E, 0x0D, 0x69\n    ],\n    hair: [\n        0x4F, 0x06, 0x00, 0x02, 0x01, 0x04,\n        0x6F, 0x50, 0x03, 0x51, 0x07, 0x52\n    ],\n    major: [\n        36, 37, 38, 39, 40, 41,\n        42, 43, 44, 45, 46, 47,\n        48, 49, 50, 51, 52, 53,\n        54, 55, 56, 57, 58, 59,\n        60, 61, 62, 63, 64, 65,\n            66, 67, 68, 69\n    ],\n    minor: [\n        36, 37, 38, 39, 40, 41,\n        42, 43, 44, 45, 46, 47,\n        48, 49, 50, 51, 52, 53,\n        54, 55, 56, 57, 58, 59,\n        60, 61, 62, 63, 64, 65,\n            66, 67, 68, 69\n    ],\n    armor: [\n        22, // Leather Armor\n        92, // Leather Armor +1\n        95, // Leather Armor +2\n        91, // Studded Leather Armor\n       // 95, // Studded Leather Armor +1\n        94, // Studded Leather Armor +2\n        21, // Shadow Armor\n        6, // Chainmail armor\n        97, // Chainmail armor +1\n        5, // Chainmail armor +2\n        18, // Mithril Chain Mail +4\n        27, // Splint Mail\n        14, // Splint Mail +1\n        28, // Plate Armor\n        7, // Ankheg Plate Mail\n       // 27, // Full Plate Armor\n        29, // Full Plate Armor +1\n    ],\n    leather: [\n        23,// Leather Armor\n        21, // Leather Armor +1\n        94,// Leather Armor +2\n        92, // Studded Leather Armor\n        99, // Studded Leather Armor +1\n        95, // Studded Leather Armor +2\n       // 94, // Shadow Armor\n        22, // Chainmail armor\n        100, // Chainmail armor +1\n       // 99, // Chainmail armor +2\n       // 99, // Mithril Chain Mail +4\n       // 94, // Splint Mail\n       // 94, // Splint Mail +1\n       // 23, // Plate Armor\n        10, // Ankheg Plate Mail\n        91, // Full Plate Armor\n       // 23, // Full Plate Armor +1\n    ],\n    metal: [\n        30,// Leather Armor\n        93, // Leather Armor +1\n        27, // Leather Armor +2\n       // 27, // Studded Leather Armor\n       // 93, // Studded Leather Armor +1\n        25, // Studded Leather Armor +2\n       // 27, // Shadow Armor\n       // 27, // Chainmail armor\n        94, // Chainmail armor +1\n       // 25, // Chainmail armor +2\n       // 27, // Mithril Chain Mail +4\n       // 25, // Splint Mail\n       // 25, // Splint Mail +1\n       // 30, // Plate Armor,\n        44, // Ankheg Plate Mail\n       // 30, // Full Plate Armor\n        29, // Full Plate Armor +1\n    ],\n}\n\nexport function useColorTable(type: AppearanceColorType | undefined) {\n    if (type) {\n        return dictionary[type]\n    }\n    return null\n}\n","/* Simplified JedWatson/classnames (https://github.com/JedWatson/classnames) */\n\ninterface IClassNamesDefinition {\n    [className: string]: boolean\n}\n\n/**\n * Build className string using conditional expressions.\n *\n * cn('button') -> 'button'  \n * cn('button', { red: false, green: true }), 'large') -> 'button green large'  \n *\n * @param classNames String or { [className]: condition } dictionary\n * @returns Joined className string\n */\nfunction cn(...classNames: Array<string | IClassNamesDefinition>) {\n    const result: string[] = []\n    classNames.forEach((item) => {\n        if (typeof item === 'string') {\n            result.push(item)\n        } else {\n            Object.keys(item).forEach((key) => {\n                if (item[key]) {\n                    result.push(key)\n                }\n            })\n        }\n    })\n    return result.join(' ')\n}\n\nexport default cn\n","import React from 'react'\nimport styles from './PaperdollView.module.css'\nimport PaperdollBam from './PaperdollBam'\nimport ColorTable from '../ColorTable/ColorTable'\nimport { Card } from '../Card/Card'\n\ntype PaperdollDescriptor = {\n    gender: PaperdollGender,\n    race: PaperdollRace,\n    role: PaperdollRole,\n    armor: PaperdollArmor\n}\n\nfunction getPaperdollName(paperdollDescriptor: PaperdollDescriptor) {\n    const { race, gender, role, armor } = paperdollDescriptor\n    return `C${race}${gender}${role}${armor}INV.BAM`\n}\n\nenum PaperdollRace {\n    Human = 'H'\n}\n\nenum PaperdollGender {\n    Male = 'M',\n    Female = 'F'\n}\n\nenum PaperdollRole {\n    Warrior = 'F',\n    Priest = 'C',\n    Rogue = 'T',\n    MagicUser = 'W'\n}\n\nenum PaperdollArmor {\n    None = '1',\n    Light = '2',\n    Medium = '3',\n    Heavy = '4'\n}\n\nexport const PaperdollView: React.FC = () => {\n    const [skin, setSkin] = React.useState(16)\n    const [hair, setHair] = React.useState(4)\n    const [major, setMajor] = React.useState(44)\n    const [minor, setMinor] = React.useState(55)\n    const [armor, setArmor] = React.useState(28) // Armor/Trimming\n    const [leather, setLeather] = React.useState(23) // Strap/Leather\n    const [metal, setMetal] = React.useState(30) // Belt/Amulet\n    const [paperdollDescriptor, setPaperdollDescriptor] = React.useState({\n        gender: PaperdollGender.Male,\n        race: PaperdollRace.Human,\n        role: PaperdollRole.Priest,\n        armor: PaperdollArmor.Heavy\n    })\n\n    const paperdollName = getPaperdollName(paperdollDescriptor)\n\n    const handleGender = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setPaperdollDescriptor({\n            ...paperdollDescriptor,\n            gender: e.target.value as PaperdollGender\n        })\n    }\n\n    const handleRace = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setPaperdollDescriptor({\n            ...paperdollDescriptor,\n            race: e.target.value as PaperdollRace\n        })\n    }\n\n    const handleRole = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setPaperdollDescriptor({\n            ...paperdollDescriptor,\n            role: e.target.value as PaperdollRole\n        })\n    }\n\n    const handleArmor = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setPaperdollDescriptor({\n            ...paperdollDescriptor,\n            armor: e.target.value as PaperdollArmor\n        })\n    }\n\n    return <div className={styles.container}>\n        <div className={styles.placeholder}>\n            <PaperdollBam\n                paperdollName={paperdollName}\n                skin={skin}\n                hair={hair}\n                major={major}\n                minor={minor}\n                armor={armor}\n                metal={metal}\n                leather={leather}\n            />\n        </div>\n        <div>\n            <select onChange={handleGender} value={paperdollDescriptor.gender} className={styles.select}>\n                <option value={PaperdollGender.Male}>\n                    Male\n                </option>\n                <option value={PaperdollGender.Female}>\n                    Female\n                </option>\n            </select>\n            <select onChange={handleRace} value={paperdollDescriptor.race} className={styles.select}>\n                <option value={PaperdollRace.Human}>\n                    Human\n                </option>\n                <option>Elf</option>\n                <option>Half-elf</option>\n                <option>Dwarf</option>\n                <option>Gnome</option>\n                <option>Halfling</option>\n            </select>\n            <select onChange={handleRole} value={paperdollDescriptor.role} className={styles.select}>\n                <option value={PaperdollRole.Warrior}>\n                    Warrior\n                </option>\n                <option value={PaperdollRole.Priest}>\n                    Priest\n                </option>\n                <option value={PaperdollRole.Rogue}>\n                    Rogue\n                </option>\n                <option value={PaperdollRole.MagicUser}>\n                    Magic User\n                </option>\n            </select>\n            <select onChange={handleArmor} value={paperdollDescriptor.armor} className={styles.select}>\n                <option value={PaperdollArmor.None}>\n                    None\n                </option>\n                <option value={PaperdollArmor.Light}>\n                    Light\n                </option>\n                <option value={PaperdollArmor.Medium}>\n                    Medium\n                </option>\n                <option value={PaperdollArmor.Heavy}>\n                    Heavy\n                </option>\n            </select>\n            </div>\n            <div className={styles.colorsContainer}>\n                <Card title=\"Skin\">\n                    <ColorTable type=\"skin\" selectedIndex={skin} onClick={(setSkin)} />\n                </Card>\n                <Card title=\"Hair\">\n                    <ColorTable type=\"hair\" selectedIndex={hair} onClick={(setHair)} />\n                </Card>\n                <Card title=\"Major\">\n                <ColorTable type=\"major\" selectedIndex={major} onClick={(setMajor)} />\n                </Card>\n                <Card title=\"Minor\">\n                <ColorTable type=\"minor\" selectedIndex={minor} onClick={(setMinor)} />\n                </Card>\n                <Card title=\"Armor\">\n                    <ColorTable type=\"armor\" selectedIndex={armor} onClick={(setArmor)} />\n                </Card>\n                <Card title=\"Leather\">\n                    <ColorTable type=\"leather\" selectedIndex={leather} onClick={(setLeather)} />\n                </Card>\n                <Card title=\"Metal\">\n                    <ColorTable type=\"metal\" selectedIndex={metal} onClick={(setMetal)} />\n                </Card>\n            </div>\n    </div>\n}\n\nexport default PaperdollView\n","import React from 'react'\n/* eslint import/no-webpack-loader-syntax: off */\nimport icon from '!arraybuffer-loader!../../assets/COLGRAD.BAM'\nimport BAMAdapter from '../../adapters/bam';\nimport Sprite from '../../model/sprite';\nimport Palette from '../../model/palette';\nimport palette from '!arraybuffer-loader!../../assets/MPALETTE.bmp'\nimport styles from './ColorTable.module.css'\nimport { AppearanceColorType } from '../../model/color';\nimport { useColorTable } from './useColorTable';\nimport cn from '../../utils/cn';\n\ninterface ColorTableProps {\n    type?: AppearanceColorType,\n    colors?: number[],\n    selectedIndex?: number,\n    onClick?: (index: number) => void\n}\n\nexport const ColorTable: React.FC<ColorTableProps> = (props) => {\n    const colors = useColorTable(props.type) ?? props.colors\n    const dictionary = React.useMemo(() => {\n        const colorsSrc: Record<number, string> = {}\n        const adapter = new BAMAdapter();\n        const bam = adapter.parse('COLGRAD', icon);\n        bam.decompressFrames();\n        const gradient = new Sprite(bam);\n        const paletteParser = new Palette()\n        const parsedPalette = paletteParser.parse(palette)\n        colors?.forEach((item, index) => {\n            gradient.colors.metal = parsedPalette[item]\n            const src = gradient.getAsBase64()\n            colorsSrc[item] = src\n        })\n        return colorsSrc\n    }, [colors])\n\n\n    const handleClick = React.useCallback((event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n        const index = Number.parseInt(event.currentTarget.dataset.index ?? '', 10) ?? 0\n        props.onClick?.(index)\n    }, [props.onClick])\n\n    return <ul className={styles.list}>\n        {colors?.map((item, index) => {\n            return <li\n                key={item}\n                data-index={item}\n                className={cn(styles.item, { [styles.selected]: props.selectedIndex === item })}\n                onClick={handleClick}\n            >\n                <img\n                    src={dictionary[item]}\n                    alt=\"Pick this color\" // TODO color names\n                    className={styles.img}\n                />\n            </li>\n        })}\n    </ul>\n}\n\nexport default React.memo(ColorTable)\n","import React from 'react'\nimport styles from './Card.module.css'\n\ninterface CardProps {\n    title?: React.ReactNode,\n    children?: React.ReactNode\n}\n\nexport const Card: React.FC<CardProps> = (props) => {\n    return <div className={styles.container}>\n        {typeof props.title === 'string' &&\n            <h2 className={styles.title}>{props.title}</h2>\n        }\n        {typeof props.title !== 'string' && props.title}\n        {props.children}\n    </div>\n}\n\nexport default React.memo(Card)\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport styles from './AppBar.module.css'\n\nexport const AppBar: React.FC = () => {\n    return <div className={styles.container}>\n        <Link to=\"/bam-paperdoll\" className={styles.link}>\n            Paperdolls\n        </Link>\n    </div>\n}\n\nexport default React.memo(AppBar)\n","import React from 'react';\nimport './App.css';\nimport PaperdollView from './components/PaperdollView/PaperdollView'\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\nimport {AppBar} from './components/AppBar/AppBar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <AppBar />\n        <Switch>\n          <Route path=\"/bam-paperdoll\">\n            <PaperdollView />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/bam-paperdoll\" />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PaperdollView_container__3aPMc\",\"placeholder\":\"PaperdollView_placeholder__3Pqmp\",\"select\":\"PaperdollView_select__agD7z\",\"colorsContainer\":\"PaperdollView_colorsContainer__3N8bE\"};","module.exports = require(\"../../node_modules/arraybuffer-loader/lib/to-array-buffer.js\")(\"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\")"],"sourceRoot":""}